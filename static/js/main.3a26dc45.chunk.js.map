{"version":3,"sources":["components/calculateWinner.component.jsx","components/square.component.jsx","components/board.component.jsx","components/header.component.jsx","components/players.component.jsx","components/scoreboard.component.jsx","components/winner.component.jsx","components/game.component.jsx","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","Button","outline","color","className","onClick","value","Board","renderSquare","ButtonGroup","Header","Jumbotron","fluid","Container","Row","Col","href","role","PlayerNames","playerX","playerO","handleChange","Label","Input","name","placeholder","onChange","ScoreBoard","winCountX","winCountO","style","marginTop","WinnerOfGame","scoring","otherGameProps","current","history","stepNumber","winner","status","xIsNext","align","Game","state","Array","fill","bind","e","target","this","setState","slice","concat","step","moves","map","move","desc","margin","block","key","jumpTo","paddingBottom","xs","md","marginBottom","maxHeight","overflowY","size","offset","handleClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a26dc45.chunk.js","sourcesContent":["\r\nconst calculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b]\r\n      && squares[a] === squares[c]) {\r\n      return (squares[a]);\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport default calculateWinner;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n// Component -1: This component renders a single button\r\nconst Square = (props) => {\r\n  return (\r\n    <Button\r\n      outline\r\n      color=\"primary\"\r\n      className=\"square\"\r\n      onClick={() => props.onClick()}\r\n    >\r\n      {props.value}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './square.component';\r\nimport { ButtonGroup } from 'reactstrap';\r\n\r\n// Component -2: This renders 9 squares\r\nconst Board = (props) => {\r\n\r\n  function renderSquare(i) {\r\n    return <Square value={props.squares[i]}\r\n      onClick={() => props.onClick(i)} />;\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <ButtonGroup >\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </ButtonGroup>\r\n      <ButtonGroup >\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </ButtonGroup>\r\n      <ButtonGroup >\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </ButtonGroup>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Board;","import React from 'react';\r\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <Jumbotron fluid >\r\n        <Container>\r\n          <h1 className=\"display-4\">Tic Tac Toe !</h1>\r\n          <Row>\r\n            <Col>\r\n              <p className=\"lead\">This is a simple game in which there is a 3X3 matrix and players fill it with 'X' or 'O', now as soon as any one symbol alligns along a row, column or diagonal, the player with that symbol wins</p>\r\n            </Col>\r\n            <Col>\r\n              <p>This game has a unique feature of time travel, player can revert to the previous steps and then change its move, if the matrox is completely filled and nobody wins, then it is considered as draw</p>\r\n              <p className=\"lead\">\r\n                <a href='https://en.wikipedia.org/wiki/Tic-tac-toe' className='btn btn-primary' role='button' >Learn More</a>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Input, Label } from 'reactstrap';\r\n\r\nconst PlayerNames = ({ playerX, playerO, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <Label>Player for X: {playerX}</Label>\r\n      <Input name=\"playerX\" placeholder='Name of Player X' onChange={handleChange} />\r\n      <Label>Player for O: {playerO}</Label>\r\n      <Input name=\"playerO\" placeholder='Name of Player O' onChange={handleChange} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PlayerNames;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst ScoreBoard = ({ playerX, playerO, winCountX, winCountO }) => {\r\n\r\n  return (\r\n    <div>\r\n      <h5 style={{ marginTop: '15px' }}>Score Board: </h5>\r\n      <Row >\r\n        <Col>\r\n          <p>X: {playerX}</p>\r\n          {winCountX}\r\n        </Col>\r\n        <Col>\r\n          <p>O: {playerO}</p>\r\n          {winCountO}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreBoard;","import calculateWinner from './calculateWinner.component';\r\nimport React from 'react';\r\n\r\nconst WinnerOfGame = ({ scoring, ...otherGameProps }) => {\r\n\r\n  const history = otherGameProps.history;\r\n  const current = history[otherGameProps.stepNumber];\r\n  let winner = calculateWinner(current.squares);\r\n  let status = null;\r\n  if (winner) {\r\n    if (winner === 'O') {\r\n      status = 'Winner is : ' + otherGameProps.playerO;\r\n    }\r\n    else {\r\n      status = 'Winner is : ' + otherGameProps.playerX;\r\n    }\r\n  }\r\n  else if (otherGameProps.history.length === 10 && !winner) {\r\n    status = 'This match is draw';\r\n  }\r\n  else {\r\n    status = 'Next Player: ' + (otherGameProps.xIsNext ? otherGameProps.playerX : otherGameProps.playerO);\r\n  }\r\n\r\n  return (\r\n    <div align='center'>\r\n      {status}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default WinnerOfGame;","import React from 'react';\r\nimport calculateWinner from './calculateWinner.component';\r\nimport Board from './board.component';\r\nimport Header from './header.component';\r\nimport { Button, Container, Row, Col } from 'reactstrap';\r\nimport PlayerNames from './players.component';\r\nimport ScoreBoard from './scoreboard.component';\r\nimport WinnerOfGame from './winner.component';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      playerX: 'X',\r\n      playerO: 'O',\r\n      winCountX: 0,\r\n      winCountO: 0,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.scoring = this.scoring.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  scoring(winner) {\r\n    if (winner === 'O') {\r\n      this.setState({\r\n        winCountO: this.state.winCountO + 1,\r\n        xIsNext: true,\r\n      });\r\n    } else if (winner === 'X') {\r\n      this.setState({\r\n        winCountX: this.state.winCountX + 1,\r\n        xIsNext: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares)) {\r\n      this.scoring(calculateWinner(squares));\r\n      return;\r\n    }\r\n    if (squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to move #' + move : 'Go to Game start';\r\n\r\n      return (\r\n        <Button\r\n          style={{ margin: '5px' }}\r\n          block\r\n          color=\"success\"\r\n          key={move}\r\n          onClick={() => this.jumpTo(move)}\r\n        >\r\n          {desc}\r\n        </Button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Container style={{ paddingBottom: '25px' }}>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"6\" style={{ marginBottom: '20px' }}>\r\n              <h3 style={{ marginBottom: '25px' }}>\r\n                <WinnerOfGame scoring={this.scoring} {...this.state} />\r\n              </h3>\r\n              <Row>\r\n                <Col>\r\n                  <h5>Enter the Player Names: </h5>\r\n                  <PlayerNames\r\n                    playerX={this.state.playerX}\r\n                    playerO={this.state.playerO}\r\n                    handleChange={this.handleChange}\r\n                  />\r\n\r\n                  <ScoreBoard\r\n                    playerX={this.state.playerX}\r\n                    playerO={this.state.playerO}\r\n                    winCountX={this.state.winCountX}\r\n                    winCountO={this.state.winCountO}\r\n                  />\r\n                </Col>\r\n                <Col style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n                  <h5 align=\"center\" style={{ marginTop: '7px' }}>\r\n                    Here are the Time travel options\r\n                  </h5>\r\n                  {moves}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col align=\"center\" xs={{ size: 12 }} md={{ size: 6, offset: 0 }}>\r\n              <Board\r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './components/game.component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}